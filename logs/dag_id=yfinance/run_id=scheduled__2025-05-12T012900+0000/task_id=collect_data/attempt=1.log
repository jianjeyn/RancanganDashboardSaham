{"timestamp":"2025-05-12T01:29:00.858601","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-12T01:29:00.860298","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/yfinance_DAG.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-12T01:29:09.553584Z","level":"error","event":"25/05/12 01:29:09 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:10.041642Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:10.043419Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.447725Z","level":"error","event":"25/05/12 01:29:11 ERROR SparkContext: Failed to add /opt/airflow/jars/* to Spark environment","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.448505Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/airflow/jars/* not found","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.455773Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2095)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.456892Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2151)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.457768Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:521)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.458704Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:521)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.459603Z","level":"error","event":"\tat scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.460311Z","level":"error","event":"\tat scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.460988Z","level":"error","event":"\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.461980Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:521)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.462789Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:58)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.463484Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.464471Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.465138Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.465786Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.466484Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.467109Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.467761Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.468582Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.469363Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.470069Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.470881Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.471660Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:106)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:11.472384Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.105597Z","level":"error","event":"25/05/12 01:29:21 ERROR TorrentBroadcast: Store broadcast broadcast_0 fail, remove all pieces of the broadcast","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.175056Z","level":"info","event":"Mengambil data saham AADI.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.175480Z","level":"info","event":"Data saham AADI.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.175858Z","level":"info","event":"Mengambil data saham AALI.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.176141Z","level":"info","event":"Data saham AALI.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.176419Z","level":"info","event":"Mengambil data saham ABBA.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.176822Z","level":"info","event":"Data saham ABBA.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.177119Z","level":"info","event":"Mengambil data saham ABDA.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.177480Z","level":"info","event":"Data saham ABDA.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.177797Z","level":"info","event":"Mengambil data saham ABMM.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.178088Z","level":"info","event":"Data saham ABMM.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.178406Z","level":"info","event":"Semua data saham selesai diproses!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.178824Z","level":"error","event":"Traceback (most recent call last):","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.179191Z","level":"error","event":"  File \"/opt/airflow/dags/jobs/YFinance.py\", line 61, in <module>","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.179526Z","level":"error","event":"    .load().withColumn(\"date\", to_date(col(\"Date\")))","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.179880Z","level":"error","event":"     ^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.180264Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/readwriter.py\", line 314, in load","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.180871Z","level":"error","event":"    return self._df(self._jreader.load())","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.181439Z","level":"error","event":"                    ^^^^^^^^^^^^^^^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.181853Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py\", line 1322, in __call__","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.182284Z","level":"error","event":"    return_value = get_return_value(","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.182670Z","level":"error","event":"                   ^^^^^^^^^^^^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.182968Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py\", line 179, in deco","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.183285Z","level":"error","event":"    return f(*a, **kw)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.183631Z","level":"error","event":"           ^^^^^^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.183961Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py\", line 326, in get_return_value","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.184215Z","level":"error","event":"    raise Py4JJavaError(","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.184529Z","level":"error","event":"py4j.protocol.Py4JJavaError: An error occurred while calling o34.load.","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.184752Z","level":"error","event":": java.lang.NoClassDefFoundError: com/mongodb/client/MongoClient","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.185020Z","level":"error","event":"\tat java.base/java.lang.Class.getDeclaredMethods0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.185266Z","level":"error","event":"\tat java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3402)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.185542Z","level":"error","event":"\tat java.base/java.lang.Class.getDeclaredMethod(Class.java:2673)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.185802Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.getPrivateMethod(ObjectStreamClass.java:1524)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.186080Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass$2.run(ObjectStreamClass.java:413)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.186383Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass$2.run(ObjectStreamClass.java:384)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.186823Z","level":"error","event":"\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:318)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.187303Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.<init>(ObjectStreamClass.java:384)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.187812Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass$Caches$1.computeValue(ObjectStreamClass.java:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.188978Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass$Caches$1.computeValue(ObjectStreamClass.java:107)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.189548Z","level":"error","event":"\tat java.base/java.io.ClassCache$1.computeValue(ClassCache.java:73)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.190006Z","level":"error","event":"\tat java.base/java.io.ClassCache$1.computeValue(ClassCache.java:70)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.190455Z","level":"error","event":"\tat java.base/java.lang.ClassValue.getFromHashMap(ClassValue.java:228)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.191006Z","level":"error","event":"\tat java.base/java.lang.ClassValue.getFromBackup(ClassValue.java:210)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.191458Z","level":"error","event":"\tat java.base/java.lang.ClassValue.get(ClassValue.java:116)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.191904Z","level":"error","event":"\tat java.base/java.io.ClassCache.get(ClassCache.java:84)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.192326Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.lookup(ObjectStreamClass.java:363)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.192656Z","level":"error","event":"\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1137)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.193047Z","level":"error","event":"\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:350)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.193522Z","level":"error","event":"\tat org.apache.spark.serializer.JavaSerializationStream.writeObject(JavaSerializer.scala:46)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.193927Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcast$.$anonfun$blockifyObject$4(TorrentBroadcast.scala:365)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.194498Z","level":"error","event":"\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.194889Z","level":"error","event":"\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.195291Z","level":"error","event":"\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.195657Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcast$.blockifyObject(TorrentBroadcast.scala:367)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.196050Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcast.writeBlocks(TorrentBroadcast.scala:161)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.196469Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcast.<init>(TorrentBroadcast.scala:99)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.197384Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcastFactory.newBroadcast(TorrentBroadcastFactory.scala:38)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.198151Z","level":"error","event":"\tat org.apache.spark.broadcast.BroadcastManager.newBroadcast(BroadcastManager.scala:78)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.199159Z","level":"error","event":"\tat org.apache.spark.SparkContext.broadcastInternal(SparkContext.scala:1657)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.199757Z","level":"error","event":"\tat org.apache.spark.SparkContext.broadcast(SparkContext.scala:1639)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.200169Z","level":"error","event":"\tat com.mongodb.spark.MongoSpark.rdd(MongoSpark.scala:530)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.200559Z","level":"error","event":"\tat com.mongodb.spark.MongoSpark.toRDD(MongoSpark.scala:542)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.200949Z","level":"error","event":"\tat com.mongodb.spark.sql.DefaultSource.constructRelation(DefaultSource.scala:93)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.201355Z","level":"error","event":"\tat com.mongodb.spark.sql.DefaultSource.createRelation(DefaultSource.scala:50)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.201821Z","level":"error","event":"\tat org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.202281Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.202841Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.203301Z","level":"error","event":"\tat scala.Option.getOrElse(Option.scala:189)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.203820Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.204237Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:172)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.204577Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.204972Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.205346Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.205647Z","level":"error","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.206051Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.206379Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.206788Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.207071Z","level":"error","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.207377Z","level":"error","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.207644Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.207925Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:106)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.208182Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.208453Z","level":"error","event":"Caused by: java.lang.ClassNotFoundException: com.mongodb.client.MongoClient","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.208704Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.208979Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.209231Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.209528Z","level":"error","event":"\t... 53 more","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.209861Z","level":"error","event":"","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:29:21.849947","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"CalledProcessError","exc_value":"Command '['python', 'dags/jobs/YFinance.py']' returned non-zero exit status 1.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":825,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1088,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/yfinance_DAG.py","lineno":14,"name":"<lambda>"},{"filename":"/usr/local/lib/python3.12/subprocess.py","lineno":571,"name":"run"}]}]}
