{"timestamp":"2025-05-12T01:28:01.043838","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-12T01:28:01.044444","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/yfinance_DAG.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-12T01:28:06.295712Z","level":"error","event":"25/05/12 01:28:06 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:06.548027Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:06.561535Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.158396Z","level":"error","event":"25/05/12 01:28:08 ERROR SparkContext: Failed to add /opt/airflow/jars/* to Spark environment","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.159212Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/airflow/jars/* not found","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.159963Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2095)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.160645Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2151)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.161289Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:521)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.161831Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:521)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.162603Z","level":"error","event":"\tat scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.163353Z","level":"error","event":"\tat scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.164179Z","level":"error","event":"\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.164908Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:521)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.165593Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:58)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.166351Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.167091Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.167930Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.168592Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.169174Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.169826Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.170523Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.171167Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.171820Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.172437Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.173417Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.174180Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:106)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:08.174832Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.147377Z","level":"error","event":"25/05/12 01:28:21 ERROR TorrentBroadcast: Store broadcast broadcast_0 fail, remove all pieces of the broadcast","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.393981Z","level":"info","event":"Mengambil data saham AADI.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.394806Z","level":"info","event":"Data saham AADI.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.395503Z","level":"info","event":"Mengambil data saham AALI.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.396168Z","level":"info","event":"Data saham AALI.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.396910Z","level":"info","event":"Mengambil data saham ABBA.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.397545Z","level":"info","event":"Data saham ABBA.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.398190Z","level":"info","event":"Mengambil data saham ABDA.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.398786Z","level":"info","event":"Data saham ABDA.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.399485Z","level":"info","event":"Mengambil data saham ABMM.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.400120Z","level":"info","event":"Data saham ABMM.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.400817Z","level":"info","event":"Semua data saham selesai diproses!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.401677Z","level":"error","event":"Traceback (most recent call last):","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.402461Z","level":"error","event":"  File \"/opt/airflow/dags/jobs/YFinance.py\", line 61, in <module>","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.403215Z","level":"error","event":"    .load().withColumn(\"date\", to_date(col(\"Date\")))","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.403994Z","level":"error","event":"     ^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.404799Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/readwriter.py\", line 314, in load","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.405564Z","level":"error","event":"    return self._df(self._jreader.load())","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.406352Z","level":"error","event":"                    ^^^^^^^^^^^^^^^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.407173Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py\", line 1322, in __call__","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.408060Z","level":"error","event":"    return_value = get_return_value(","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.409613Z","level":"error","event":"                   ^^^^^^^^^^^^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.410410Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py\", line 179, in deco","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.411408Z","level":"error","event":"    return f(*a, **kw)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.412255Z","level":"error","event":"           ^^^^^^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.412992Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py\", line 326, in get_return_value","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.413776Z","level":"error","event":"    raise Py4JJavaError(","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.414662Z","level":"error","event":"py4j.protocol.Py4JJavaError: An error occurred while calling o34.load.","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.415323Z","level":"error","event":": java.lang.NoClassDefFoundError: com/mongodb/client/MongoClient","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.415903Z","level":"error","event":"\tat java.base/java.lang.Class.getDeclaredMethods0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.416522Z","level":"error","event":"\tat java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3402)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.417140Z","level":"error","event":"\tat java.base/java.lang.Class.getDeclaredMethod(Class.java:2673)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.417735Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.getPrivateMethod(ObjectStreamClass.java:1524)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.418321Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass$2.run(ObjectStreamClass.java:413)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.418860Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass$2.run(ObjectStreamClass.java:384)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.419476Z","level":"error","event":"\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:318)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.420033Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.<init>(ObjectStreamClass.java:384)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.420570Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass$Caches$1.computeValue(ObjectStreamClass.java:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.421294Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass$Caches$1.computeValue(ObjectStreamClass.java:107)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.422107Z","level":"error","event":"\tat java.base/java.io.ClassCache$1.computeValue(ClassCache.java:73)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.422830Z","level":"error","event":"\tat java.base/java.io.ClassCache$1.computeValue(ClassCache.java:70)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.423788Z","level":"error","event":"\tat java.base/java.lang.ClassValue.getFromHashMap(ClassValue.java:228)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.424643Z","level":"error","event":"\tat java.base/java.lang.ClassValue.getFromBackup(ClassValue.java:210)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.425238Z","level":"error","event":"\tat java.base/java.lang.ClassValue.get(ClassValue.java:116)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.425891Z","level":"error","event":"\tat java.base/java.io.ClassCache.get(ClassCache.java:84)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.426696Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.lookup(ObjectStreamClass.java:363)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.427405Z","level":"error","event":"\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1137)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.428075Z","level":"error","event":"\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:350)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.428957Z","level":"error","event":"\tat org.apache.spark.serializer.JavaSerializationStream.writeObject(JavaSerializer.scala:46)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.429659Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcast$.$anonfun$blockifyObject$4(TorrentBroadcast.scala:365)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.430301Z","level":"error","event":"\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.430916Z","level":"error","event":"\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.431561Z","level":"error","event":"\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.432219Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcast$.blockifyObject(TorrentBroadcast.scala:367)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.432838Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcast.writeBlocks(TorrentBroadcast.scala:161)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.433624Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcast.<init>(TorrentBroadcast.scala:99)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.434625Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcastFactory.newBroadcast(TorrentBroadcastFactory.scala:38)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.435505Z","level":"error","event":"\tat org.apache.spark.broadcast.BroadcastManager.newBroadcast(BroadcastManager.scala:78)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.436233Z","level":"error","event":"\tat org.apache.spark.SparkContext.broadcastInternal(SparkContext.scala:1657)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.437139Z","level":"error","event":"\tat org.apache.spark.SparkContext.broadcast(SparkContext.scala:1639)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.438504Z","level":"error","event":"\tat com.mongodb.spark.MongoSpark.rdd(MongoSpark.scala:530)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.439605Z","level":"error","event":"\tat com.mongodb.spark.MongoSpark.toRDD(MongoSpark.scala:542)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.440574Z","level":"error","event":"\tat com.mongodb.spark.sql.DefaultSource.constructRelation(DefaultSource.scala:93)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.441599Z","level":"error","event":"\tat com.mongodb.spark.sql.DefaultSource.createRelation(DefaultSource.scala:50)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.442609Z","level":"error","event":"\tat org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.443704Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.444799Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.445653Z","level":"error","event":"\tat scala.Option.getOrElse(Option.scala:189)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.446348Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.446974Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:172)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.447681Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.448515Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.449336Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.450185Z","level":"error","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.450939Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.451836Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.452671Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.453825Z","level":"error","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.454658Z","level":"error","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.457176Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.458184Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:106)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.468216Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.469568Z","level":"error","event":"Caused by: java.lang.ClassNotFoundException: com.mongodb.client.MongoClient","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.471469Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.472462Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.473538Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.474300Z","level":"error","event":"\t... 53 more","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:21.475083Z","level":"error","event":"","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:28:22.389057","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"CalledProcessError","exc_value":"Command '['python', 'dags/jobs/YFinance.py']' returned non-zero exit status 1.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":825,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1088,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/yfinance_DAG.py","lineno":14,"name":"<lambda>"},{"filename":"/usr/local/lib/python3.12/subprocess.py","lineno":571,"name":"run"}]}]}
