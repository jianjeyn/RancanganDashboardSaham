{"timestamp":"2025-05-12T01:25:01.144602","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-12T01:25:01.147978","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/yfinance_DAG.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-12T01:25:11.940246Z","level":"error","event":"25/05/12 01:25:11 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:12.300659Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:12.302615Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.799085Z","level":"error","event":"25/05/12 01:25:13 ERROR SparkContext: Failed to add /opt/airflow/jars/* to Spark environment","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.799688Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/airflow/jars/* not found","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.800194Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2095)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.800671Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2151)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.801222Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:521)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.801714Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:521)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.802178Z","level":"error","event":"\tat scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.802715Z","level":"error","event":"\tat scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.803406Z","level":"error","event":"\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.803996Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:521)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.804656Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:58)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.805256Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.805887Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.806586Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.807292Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.807954Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.808631Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.809280Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.810019Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.810547Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.811000Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.811536Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.812058Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:106)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:13.812617Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.176152Z","level":"error","event":"25/05/12 01:25:22 ERROR TorrentBroadcast: Store broadcast broadcast_0 fail, remove all pieces of the broadcast","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.281204Z","level":"info","event":"Mengambil data saham AADI.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.281634Z","level":"info","event":"Data saham AADI.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.281981Z","level":"info","event":"Mengambil data saham AALI.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.282287Z","level":"info","event":"Data saham AALI.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.282605Z","level":"info","event":"Mengambil data saham ABBA.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.282883Z","level":"info","event":"Data saham ABBA.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.283185Z","level":"info","event":"Mengambil data saham ABDA.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.283516Z","level":"info","event":"Data saham ABDA.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.283857Z","level":"info","event":"Mengambil data saham ABMM.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.284186Z","level":"info","event":"Data saham ABMM.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.284553Z","level":"info","event":"Semua data saham selesai diproses!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.284932Z","level":"error","event":"Traceback (most recent call last):","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.285209Z","level":"error","event":"  File \"/opt/airflow/dags/jobs/YFinance.py\", line 61, in <module>","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.285482Z","level":"error","event":"    .load().withColumn(\"date\", to_date(col(\"Date\")))","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.285820Z","level":"error","event":"     ^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.286202Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/readwriter.py\", line 314, in load","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.286539Z","level":"error","event":"    return self._df(self._jreader.load())","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.286839Z","level":"error","event":"                    ^^^^^^^^^^^^^^^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.287121Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py\", line 1322, in __call__","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.287578Z","level":"error","event":"    return_value = get_return_value(","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.287923Z","level":"error","event":"                   ^^^^^^^^^^^^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.288213Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py\", line 179, in deco","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.288484Z","level":"error","event":"    return f(*a, **kw)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.288733Z","level":"error","event":"           ^^^^^^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.289073Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py\", line 326, in get_return_value","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.289387Z","level":"error","event":"    raise Py4JJavaError(","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.289698Z","level":"error","event":"py4j.protocol.Py4JJavaError: An error occurred while calling o34.load.","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.289969Z","level":"error","event":": java.lang.NoClassDefFoundError: com/mongodb/client/MongoClient","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.290254Z","level":"error","event":"\tat java.base/java.lang.Class.getDeclaredMethods0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.290515Z","level":"error","event":"\tat java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3402)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.291028Z","level":"error","event":"\tat java.base/java.lang.Class.getDeclaredMethod(Class.java:2673)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.291473Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.getPrivateMethod(ObjectStreamClass.java:1524)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.291918Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass$2.run(ObjectStreamClass.java:413)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.292298Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass$2.run(ObjectStreamClass.java:384)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.292791Z","level":"error","event":"\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:318)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.293390Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.<init>(ObjectStreamClass.java:384)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.293759Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass$Caches$1.computeValue(ObjectStreamClass.java:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.294066Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass$Caches$1.computeValue(ObjectStreamClass.java:107)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.294374Z","level":"error","event":"\tat java.base/java.io.ClassCache$1.computeValue(ClassCache.java:73)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.294657Z","level":"error","event":"\tat java.base/java.io.ClassCache$1.computeValue(ClassCache.java:70)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.294972Z","level":"error","event":"\tat java.base/java.lang.ClassValue.getFromHashMap(ClassValue.java:228)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.295250Z","level":"error","event":"\tat java.base/java.lang.ClassValue.getFromBackup(ClassValue.java:210)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.295550Z","level":"error","event":"\tat java.base/java.lang.ClassValue.get(ClassValue.java:116)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.295840Z","level":"error","event":"\tat java.base/java.io.ClassCache.get(ClassCache.java:84)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.296103Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.lookup(ObjectStreamClass.java:363)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.296393Z","level":"error","event":"\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1137)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.296661Z","level":"error","event":"\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:350)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.296948Z","level":"error","event":"\tat org.apache.spark.serializer.JavaSerializationStream.writeObject(JavaSerializer.scala:46)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.297235Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcast$.$anonfun$blockifyObject$4(TorrentBroadcast.scala:365)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.297651Z","level":"error","event":"\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.297959Z","level":"error","event":"\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.298238Z","level":"error","event":"\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.298513Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcast$.blockifyObject(TorrentBroadcast.scala:367)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.298771Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcast.writeBlocks(TorrentBroadcast.scala:161)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.299140Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcast.<init>(TorrentBroadcast.scala:99)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.299470Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcastFactory.newBroadcast(TorrentBroadcastFactory.scala:38)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.299769Z","level":"error","event":"\tat org.apache.spark.broadcast.BroadcastManager.newBroadcast(BroadcastManager.scala:78)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.300070Z","level":"error","event":"\tat org.apache.spark.SparkContext.broadcastInternal(SparkContext.scala:1657)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.300364Z","level":"error","event":"\tat org.apache.spark.SparkContext.broadcast(SparkContext.scala:1639)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.300648Z","level":"error","event":"\tat com.mongodb.spark.MongoSpark.rdd(MongoSpark.scala:530)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.300936Z","level":"error","event":"\tat com.mongodb.spark.MongoSpark.toRDD(MongoSpark.scala:542)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.301223Z","level":"error","event":"\tat com.mongodb.spark.sql.DefaultSource.constructRelation(DefaultSource.scala:93)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.301543Z","level":"error","event":"\tat com.mongodb.spark.sql.DefaultSource.createRelation(DefaultSource.scala:50)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.301913Z","level":"error","event":"\tat org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.302240Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.302570Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.302872Z","level":"error","event":"\tat scala.Option.getOrElse(Option.scala:189)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.303168Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.303554Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:172)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.303890Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.304321Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.304632Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.304940Z","level":"error","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.305335Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.305641Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.305993Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.306378Z","level":"error","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.306701Z","level":"error","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.307063Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.307508Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:106)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.308083Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.308605Z","level":"error","event":"Caused by: java.lang.ClassNotFoundException: com.mongodb.client.MongoClient","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.309024Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.309412Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.309821Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.310167Z","level":"error","event":"\t... 53 more","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.310547Z","level":"error","event":"","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:25:22.869145","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"CalledProcessError","exc_value":"Command '['python', 'dags/jobs/YFinance.py']' returned non-zero exit status 1.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":825,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1088,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/yfinance_DAG.py","lineno":14,"name":"<lambda>"},{"filename":"/usr/local/lib/python3.12/subprocess.py","lineno":571,"name":"run"}]}]}
