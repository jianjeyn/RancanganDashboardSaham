{"timestamp":"2025-05-12T01:26:00.553014","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-12T01:26:00.553819","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/yfinance_DAG.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-12T01:26:08.885619Z","level":"error","event":"25/05/12 01:26:08 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:09.171224Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:09.172528Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.524871Z","level":"error","event":"25/05/12 01:26:10 ERROR SparkContext: Failed to add /opt/airflow/jars/* to Spark environment","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.525665Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/airflow/jars/* not found","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.526446Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2095)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.527335Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2151)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.527964Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:521)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.528534Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:521)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.529222Z","level":"error","event":"\tat scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.529846Z","level":"error","event":"\tat scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.530443Z","level":"error","event":"\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.531096Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:521)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.531832Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:58)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.532431Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.533084Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.534200Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.534879Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.535436Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.535990Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.536483Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.537119Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.537671Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.538371Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.538876Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.539356Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:106)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:10.539838Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.684653Z","level":"error","event":"25/05/12 01:26:18 ERROR TorrentBroadcast: Store broadcast broadcast_0 fail, remove all pieces of the broadcast","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.752145Z","level":"info","event":"Mengambil data saham AADI.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.752603Z","level":"info","event":"Data saham AADI.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.753007Z","level":"info","event":"Mengambil data saham AALI.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.753423Z","level":"info","event":"Data saham AALI.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.753804Z","level":"info","event":"Mengambil data saham ABBA.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.754184Z","level":"info","event":"Data saham ABBA.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.754615Z","level":"info","event":"Mengambil data saham ABDA.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.755013Z","level":"info","event":"Data saham ABDA.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.755432Z","level":"info","event":"Mengambil data saham ABMM.JK dari yfinance...","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.755793Z","level":"info","event":"Data saham ABMM.JK berhasil disimpan ke MongoDB!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.756135Z","level":"info","event":"Semua data saham selesai diproses!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.756546Z","level":"error","event":"Traceback (most recent call last):","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.756892Z","level":"error","event":"  File \"/opt/airflow/dags/jobs/YFinance.py\", line 61, in <module>","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.757274Z","level":"error","event":"    .load().withColumn(\"date\", to_date(col(\"Date\")))","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.757618Z","level":"error","event":"     ^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.757991Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/readwriter.py\", line 314, in load","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.758321Z","level":"error","event":"    return self._df(self._jreader.load())","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.758628Z","level":"error","event":"                    ^^^^^^^^^^^^^^^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.758901Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py\", line 1322, in __call__","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.759280Z","level":"error","event":"    return_value = get_return_value(","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.759615Z","level":"error","event":"                   ^^^^^^^^^^^^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.759923Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py\", line 179, in deco","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.760240Z","level":"error","event":"    return f(*a, **kw)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.760548Z","level":"error","event":"           ^^^^^^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.760864Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py\", line 326, in get_return_value","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.761166Z","level":"error","event":"    raise Py4JJavaError(","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.761445Z","level":"error","event":"py4j.protocol.Py4JJavaError: An error occurred while calling o34.load.","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.761751Z","level":"error","event":": java.lang.NoClassDefFoundError: com/mongodb/client/MongoClient","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.762071Z","level":"error","event":"\tat java.base/java.lang.Class.getDeclaredMethods0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.762429Z","level":"error","event":"\tat java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3402)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.762738Z","level":"error","event":"\tat java.base/java.lang.Class.getDeclaredMethod(Class.java:2673)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.763056Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.getPrivateMethod(ObjectStreamClass.java:1524)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.763372Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass$2.run(ObjectStreamClass.java:413)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.763758Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass$2.run(ObjectStreamClass.java:384)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.764199Z","level":"error","event":"\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:318)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.764545Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.<init>(ObjectStreamClass.java:384)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.764864Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass$Caches$1.computeValue(ObjectStreamClass.java:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.765138Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass$Caches$1.computeValue(ObjectStreamClass.java:107)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.765429Z","level":"error","event":"\tat java.base/java.io.ClassCache$1.computeValue(ClassCache.java:73)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.765688Z","level":"error","event":"\tat java.base/java.io.ClassCache$1.computeValue(ClassCache.java:70)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.765954Z","level":"error","event":"\tat java.base/java.lang.ClassValue.getFromHashMap(ClassValue.java:228)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.766208Z","level":"error","event":"\tat java.base/java.lang.ClassValue.getFromBackup(ClassValue.java:210)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.766468Z","level":"error","event":"\tat java.base/java.lang.ClassValue.get(ClassValue.java:116)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.766721Z","level":"error","event":"\tat java.base/java.io.ClassCache.get(ClassCache.java:84)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.766962Z","level":"error","event":"\tat java.base/java.io.ObjectStreamClass.lookup(ObjectStreamClass.java:363)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.767206Z","level":"error","event":"\tat java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1137)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.767447Z","level":"error","event":"\tat java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:350)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.767688Z","level":"error","event":"\tat org.apache.spark.serializer.JavaSerializationStream.writeObject(JavaSerializer.scala:46)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.767933Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcast$.$anonfun$blockifyObject$4(TorrentBroadcast.scala:365)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.768181Z","level":"error","event":"\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.768419Z","level":"error","event":"\tat org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.768671Z","level":"error","event":"\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.768917Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcast$.blockifyObject(TorrentBroadcast.scala:367)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.769175Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcast.writeBlocks(TorrentBroadcast.scala:161)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.769426Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcast.<init>(TorrentBroadcast.scala:99)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.769689Z","level":"error","event":"\tat org.apache.spark.broadcast.TorrentBroadcastFactory.newBroadcast(TorrentBroadcastFactory.scala:38)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.769924Z","level":"error","event":"\tat org.apache.spark.broadcast.BroadcastManager.newBroadcast(BroadcastManager.scala:78)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.770156Z","level":"error","event":"\tat org.apache.spark.SparkContext.broadcastInternal(SparkContext.scala:1657)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.770414Z","level":"error","event":"\tat org.apache.spark.SparkContext.broadcast(SparkContext.scala:1639)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.770645Z","level":"error","event":"\tat com.mongodb.spark.MongoSpark.rdd(MongoSpark.scala:530)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.770879Z","level":"error","event":"\tat com.mongodb.spark.MongoSpark.toRDD(MongoSpark.scala:542)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.771109Z","level":"error","event":"\tat com.mongodb.spark.sql.DefaultSource.constructRelation(DefaultSource.scala:93)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.771353Z","level":"error","event":"\tat com.mongodb.spark.sql.DefaultSource.createRelation(DefaultSource.scala:50)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.771596Z","level":"error","event":"\tat org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:346)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.771870Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.loadV1Source(DataFrameReader.scala:229)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.772142Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.$anonfun$load$2(DataFrameReader.scala:211)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.772393Z","level":"error","event":"\tat scala.Option.getOrElse(Option.scala:189)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.772632Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:211)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.772890Z","level":"error","event":"\tat org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:172)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.773135Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.773396Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.773639Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.773878Z","level":"error","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.774264Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.774507Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.774770Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.775016Z","level":"error","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.775252Z","level":"error","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.775484Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.775718Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:106)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.775949Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.776204Z","level":"error","event":"Caused by: java.lang.ClassNotFoundException: com.mongodb.client.MongoClient","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.776447Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.776689Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.776923Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.777155Z","level":"error","event":"\t... 53 more","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:18.777389Z","level":"error","event":"","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-12T01:26:19.511843","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"CalledProcessError","exc_value":"Command '['python', 'dags/jobs/YFinance.py']' returned non-zero exit status 1.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":825,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1088,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/yfinance_DAG.py","lineno":14,"name":"<lambda>"},{"filename":"/usr/local/lib/python3.12/subprocess.py","lineno":571,"name":"run"}]}]}
